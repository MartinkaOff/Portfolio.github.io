{"version":3,"sources":["components/pages/singleCharacterPage/SingleCharacterPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hook/http.hook.js"],"names":["View","char","name","description","thumbnail","homepage","wiki","imgStyle","className","src","alt","style","href","to","SingleCharacterPage","charId","useParams","useState","setChar","useMarvelService","loading","error","clearError","getSingleCharacter","useEffect","updateChar","then","onCharLoaded","errorMessage","spinner","content","ErrorMessage","display","width","height","objectFit","margin","img","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacterByName","getCharacter","id","_transformSingleCharacter","getAllComics","_transformComics","getComic","descr","lengthDescr","length","slice","filterDescr","path","extension","urls","comics","items","title","pageCount","language","textObjects","price","prices"],"mappings":"wMA2CMA,EAAO,SAAH,GAAgB,IAAXC,EAAI,EAAJA,KACJC,EAAgDD,EAAhDC,KAAMC,EAA0CF,EAA1CE,YAAaC,EAA6BH,EAA7BG,UAAWC,EAAkBJ,EAAlBI,SAAUC,EAAQL,EAARK,KAE3CC,EAAW,CAAC,UAAa,SAK7B,MAJkB,wEAAdH,IACAG,EAAW,CAAC,UAAa,UAIzB,sBAAKC,UAAU,mBAAkB,UAC7B,qBAAKC,IAAKL,EAAWM,IAAKR,EAAMM,UAAU,wBAAwBG,MAAOJ,IACzE,sBAAKC,UAAU,yBAAwB,UACnC,oBAAIA,UAAU,yBAAwB,SAAEN,IACxC,mBAAGM,UAAU,0BAAyB,SAAEL,IACxC,sBAAKK,UAAU,yBAAwB,UACnC,mBAAGI,KAAMP,EAAUG,UAAU,sBAAqB,SAC9C,qBAAKA,UAAU,QAAO,SAAC,eAE3B,mBAAGI,KAAMN,EAAME,UAAU,2BAA0B,SAC/C,qBAAKA,UAAU,QAAO,SAAC,iBAInC,cAAC,IAAI,CAACK,GAAG,IAAIL,UAAU,yBAAwB,SAAC,oBAK7CM,UA9Da,WACxB,IAAOC,EAAUC,cAAVD,OAEP,EAAwBE,mBAAS,MAAK,mBAA/BhB,EAAI,KAAEiB,EAAO,KACpB,EAAyDC,cAAlDC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAU,EAAVA,WAAYC,EAAkB,EAAlBA,mBAEnCC,qBAAU,WACNC,MACD,CAACV,IAEJ,IAAMU,EAAa,WACfH,IAEAC,EAAmBR,GACdW,KAAKC,IAGRA,EAAe,SAAC1B,GAClBiB,EAAQjB,IAGN2B,EAAeP,EAAQ,cAAC,IAAY,IAAK,KACzCQ,EAAUT,EAAU,cAAC,IAAO,IAAK,KACjCU,EAAYV,GAAWC,IAAUpB,EAAgC,KAAxB,cAACD,EAAI,CAACC,KAAQA,IAE7D,OACI,qCACK2B,EACAC,EACAC,O,gCCtCE,UAA0B,kC,OCQ1BC,IANM,WACjB,OACI,qBAAKpB,MAAO,CAAEqB,QAAS,QAASC,MAAO,QAASC,OAAQ,QAAQC,UAAW,UAAWC,OAAQ,UAAW3B,IAAK4B,EAAK3B,IAAI,Y,yECmHhHS,IArHU,WACrB,MCDmB,WACnB,MAA8BF,oBAAS,GAAM,mBAAtCG,EAAO,KAAEkB,EAAU,KAC1B,EAA0BrB,mBAAS,MAAK,mBAAjCI,EAAK,KAAEkB,EAAQ,KA0BtB,MAAO,CAACC,QAxBQC,sBAAW,uCAAC,WAAOC,GAAG,2FAEjB,OAFmBC,EAAM,+BAAG,MAAOC,EAAI,+BAAG,KAAMC,EAAO,+BAAG,CAAC,eAAgB,oBAE5FP,GAAW,GAAM,kBAGUQ,MAAMJ,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARE,EAAQ,QAEAC,GAAG,CAAD,sBACN,IAAIC,MAAM,mBAAD,OAAoBP,EAAG,qBAAaK,EAASG,SAAU,KAAD,oBAGtDH,EAASI,OAAO,KAAD,GAEhB,OAFZC,EAAI,OAEVd,GAAW,GAAO,kBACXc,GAAI,QAGS,MAHT,0BAEXd,GAAW,GACXC,EAAS,KAAEc,SAAS,+DAG3B,mDApB0B,GAoBxB,IAIcjC,UAASC,QAAOC,WAFdmB,uBAAY,kBAAMF,EAAS,QAAO,KDzBPe,GAAvCd,EAAO,EAAPA,QAASlB,EAAU,EAAVA,WAAYF,EAAO,EAAPA,QAASC,EAAK,EAALA,MAE/BkC,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,uCAAG,0CAAAC,EAAA,sDAA2B,OAApBC,EAAM,+BAFlB,IAEgC,SAC9BnB,EAAQ,GAAD,OAAIe,EAAQ,qCAA6BI,EAAM,YAAIH,IAAW,KAAD,EAA7E,OAAHI,EAAG,yBACFA,EAAIR,KAAKS,QAAQC,IAAIC,IAAoB,2CACnD,kBAHqB,mCAKhBC,EAAkB,uCAAG,WAAO9D,GAAI,uFACtBsC,EAAQ,GAAD,OAAIe,EAAQ,2BAAmBrD,EAAI,YAAIsD,IAAW,KAAD,EAAjE,OAAHI,EAAG,yBACIA,EAAIR,KAAKS,QAAQC,IAAIC,IAAoB,2CACtD,gBAH0B,sCAKlBE,EAAY,uCAAG,WAAOC,GAAE,uFACR1B,EAAQ,GAAD,OAAIe,EAAQ,sBAAcW,EAAE,YAAIV,IAAW,KAAD,EAA1D,OAAHI,EAAG,yBACFG,EAAoBH,EAAIR,KAAKS,QAAQ,KAAG,2CAClD,gBAHiB,sCAKZtC,EAAkB,uCAAG,WAAO2C,GAAE,uFACd1B,EAAQ,GAAD,OAAIe,EAAQ,sBAAcW,EAAE,YAAIV,IAAW,KAAD,EAA1D,OAAHI,EAAG,yBACFO,EAA0BP,EAAIR,KAAKS,QAAQ,KAAG,2CACxD,gBAHuB,sCAKlBO,EAAY,uCAAG,0CAAAV,EAAA,sDAAkB,OAAZC,EAAM,+BAAG,IAAG,SACjBnB,EAAQ,GAAD,OAAIe,EAAQ,qDAA6CI,EAAM,YAAIH,IAAW,KAAD,EAA7F,OAAHI,EAAG,yBACFA,EAAIR,KAAKS,QAAQC,IAAIO,IAAiB,2CAChD,kBAHiB,mCAKZC,EAAQ,uCAAG,WAAOJ,GAAE,uFACJ1B,EAAQ,GAAD,OAAIe,EAAQ,kBAAUW,EAAE,YAAIV,IAAW,KAAD,EAAtD,OAAHI,EAAG,yBACFS,EAAiBT,EAAIR,KAAKS,QAAQ,KAAG,2CAC/C,gBAHa,sCAKRE,EAAsB,SAAC9D,GAezB,MAAO,CACHiE,GAAIjE,EAAKiE,GACThE,KAAMD,EAAKC,KACXC,YAhBH,WACG,IAAIoE,EAAQtE,EAAKE,YACbqE,EAAcvE,EAAKE,YAAYsE,OACnC,GAAoB,IAAhBD,EAAmB,CAEnB,MADW,sCAER,OAAIA,GAAe,IACLD,EAAMG,MAAM,EAAG,KAAO,MAGhCH,EAMEI,GACbvE,UAAWH,EAAKG,UAAUwE,KAAO,IAAM3E,EAAKG,UAAUyE,UACtDxE,SAAUJ,EAAK6E,KAAK,GAAGpC,IACvBpC,KAAML,EAAK6E,KAAK,GAAGpC,IACnBqC,OAAQ9E,EAAK8E,OAAOC,QAItBb,EAA4B,SAAClE,GAahC,MAAO,CACHiE,GAAIjE,EAAKiE,GACThE,KAAMD,EAAKC,KACXC,YAdH,WACI,IAAIoE,EAAQtE,EAAKE,YAEjB,GAAoB,IADFF,EAAKE,YAAYsE,OACZ,CAEnB,MADW,sCAGX,OAAOF,EAOCI,GACbvE,UAAWH,EAAKG,UAAUwE,KAAO,IAAM3E,EAAKG,UAAUyE,UACtDxE,SAAUJ,EAAK6E,KAAK,GAAGpC,IACvBpC,KAAML,EAAK6E,KAAK,GAAGpC,IACnBqC,OAAQ9E,EAAK8E,OAAOC,QAIrBX,EAAmB,SAACU,GAAY,IAAD,EACjC,MAAO,CACZb,GAAIa,EAAOb,GACXe,MAAOF,EAAOE,MACd9E,YAAa4E,EAAO5E,aAAe,0BACnC+E,UAAWH,EAAOG,UAAS,UACrBH,EAAOG,UAAS,OACnB,2CACH9E,UAAW2E,EAAO3E,UAAUwE,KAAO,IAAMG,EAAO3E,UAAUyE,UAC1DM,UAA+B,QAArB,EAAAJ,EAAOK,YAAY,UAAE,aAArB,EAAuBD,WAAY,QAC7CE,MAAON,EAAOO,OAAO,GAAGD,MAAK,UACvBN,EAAOO,OAAO,GAAGD,MAAK,KACzB,kBAKF,MAAO,CACH/D,aACAD,QACAD,UACAqC,mBACAW,eACAH,eACA1C,qBACAyC,qBACAM","file":"static/js/7.3cfe1263.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../../services/MarvelService\";\r\nimport ErrorMessage from \"../../errorMessage/ErrorMessage\";\r\nimport Spinner from \"../../spinner/Spinner\";\r\n\r\nimport './singleCharacterPage.scss';\r\n\r\nconst SingleCharacterPage = () => {\r\n    const {charId} = useParams();\r\n\r\n    const [char, setChar] = useState(null);\r\n    const {loading, error, clearError, getSingleCharacter} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [charId])\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n\r\n        getSingleCharacter(charId)\r\n            .then(onCharLoaded);\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char = {char}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n\r\n    let imgStyle = {'objectFit': 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit': 'unset'}\r\n    }\r\n\r\n    return (\r\n        <div className=\"single-character\">\r\n            <img src={thumbnail} alt={name} className='single-character__img' style={imgStyle}/>\r\n            <div className=\"single-character__info\">\r\n                <h2 className=\"single-character__name\">{name}</h2>\r\n                <p className=\"single-character__descr\">{description}</p>\r\n                <div className=\"single-character__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <Link to=\"/\" className=\"single-character__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleCharacterPage;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px',objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hook/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, loading, error} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=5a0554807bb820263c74f7e1e00b7b23';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getSingleCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformSingleCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async(offset = 310) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComics);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n         function filterDescr() {\r\n            let descr = char.description;\r\n            let lengthDescr = char.description.length;\r\n            if (lengthDescr === 0) {\r\n                let noDescr = `There is no data. Press on HOMEPAGE`\r\n                return noDescr\r\n            } else if (lengthDescr >= 200) {\r\n                let limitDescr = descr.slice(0, 200) + '...'\r\n                return limitDescr;\r\n            } else {\r\n                return descr\r\n            }\r\n        }\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: filterDescr(),\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformSingleCharacter = (char) => {\r\n        \r\n        function filterDescr() {\r\n            let descr = char.description;\r\n            let lengthDescr = char.description.length;\r\n            if (lengthDescr === 0) {\r\n                let noDescr = `There is no data. Press on HOMEPAGE`\r\n                return noDescr\r\n            } else {\r\n                return descr\r\n            }\r\n        }\r\n\r\n       return {\r\n           id: char.id,\r\n           name: char.name,\r\n           description: filterDescr(),\r\n           thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n           homepage: char.urls[0].url,\r\n           wiki: char.urls[1].url,\r\n           comics: char.comics.items\r\n       }\r\n   }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n    }\r\n    \r\n\r\n    return {\r\n        clearError,\r\n        error,\r\n        loading,\r\n        getAllCharacters,\r\n        getAllComics,\r\n        getCharacter,\r\n        getSingleCharacter,\r\n        getCharacterByName,\r\n        getComic\r\n    };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {request, loading, error, clearError};\r\n}"],"sourceRoot":""}